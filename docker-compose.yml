services:
  postgres_primary:
    image: postgres:18-alpine
    container_name: postgres_primary
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      REPL_USER: ${REPL_USER}
      REPL_PASSWORD: ${REPL_PASSWORD}
    volumes:
      - pg_primary_data:/var/lib/postgresql/data
      - ./primary/log:/var/log/postgresql
      - ./primary/postgresql.conf:/etc/postgresql/postgresql.conf:ro
      - ./primary/init-primary.sh:/docker-entrypoint-initdb.d/init-primary.sh:ro
    command: ["postgres", "-c", "config_file=/etc/postgresql/postgresql.conf"]
    networks:
      - pg_net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"

  postgres_replica:
    image: postgres:18-alpine
    container_name: postgres_replica
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      REPL_USER: ${REPL_USER}
      REPL_PASSWORD: ${REPL_PASSWORD}
      PRIMARY_HOST: ${PRIMARY_HOST}
      PRIMARY_PORT: ${PRIMARY_PORT}
    depends_on:
      postgres_primary:
        condition: service_healthy
    volumes:
      - pg_replica_data:/var/lib/postgresql/data
      - ./replica/log:/var/log/postgresql
      - ./replica/postgresql.conf:/etc/postgresql/postgresql.conf:ro
      - ./replica/init-replica.sh:/init-replica.sh:ro
    entrypoint: ["/bin/bash", "/init-replica.sh"]
    networks:
      - pg_net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -h localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "5433:5432"

networks:
  pg_net:
    driver: bridge

volumes:
  pg_primary_data:
  pg_replica_data:
